
#include <SoftwareSerial.h>
SoftwareSerial miBT(7,6);  // pin 7 como RX, pin 6 como TX
//SE AGREGA LIBRERÍAS DE LCD
#include <Wire.h> 
#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27,16,2);

//SE AGREGA LIBRERÍAS PARA RTC
#include <ThreeWire.h>  
#include <RtcDS1302.h>

//SE CREA Y CONFIGURA OBJETO PARA MANEJAR RTC
ThreeWire myWire(4,5,2); //PINES IO, SCLK, CE -> DE RTC DS1302
RtcDS1302<ThreeWire> Rtc(myWire);

//VARIABLES
#define rele 3
#define rele2 A1
#define buzzer A0
#define in1 8
#define in2 9
#define in3 10
#define in4 1
String leeCadena;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int boi(){
   while (miBT.available()) {    // Leer el valor enviado por el Puerto serial
    delay(2);
    char c  = miBT.read();     // Lee los caracteres
   leeCadena += c;              // Convierte Caracteres a cadena de caracteres
  }  
  
  if (leeCadena.length()){       
     int dato = leeCadena.toInt();
        return dato;  
        
  }  
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void setup () {   
  miBT.begin(9600); 
 int dato = boi();
  // SE INICAR MONITOR SERIE E IMPRIME FECHA Y HORA
    Serial.begin(9600);
    Serial.print("CONFIGURACIÓN INICIAL ");
    Serial.print(__DATE__);
    Serial.println(__TIME__);
  
    //SE INICIARLIZA LCD
    lcd.init();
  lcd.backlight();
  lcd.clear();
    Rtc.Begin();// SE INICIALIZA RTC
    
   //RtcDateTime compiled = RtcDateTime(__DATE__, __TIME__);//SE CONFIGURA FECHA Y HORA ACTUAL
   //printDateTime(compiled); //SE IMPRIME FECHA Y HORA
   //Rtc.SetDateTime(compiled);
    
    Serial.println();
    pinMode(rele, OUTPUT);
    pinMode(rele2, OUTPUT);
    pinMode(buzzer,OUTPUT);
    pinMode(in1, OUTPUT);
    pinMode(in2, OUTPUT);
    pinMode(in3, OUTPUT);
    pinMode(in4, OUTPUT);

    digitalWrite(rele2, HIGH);   //el rele trabaja al revez y empieza apagado
}

////////////////////////////////////////////////////////////////////////////////////////////////////////

void loop () {

int dato = boi();
         
byte hora2 = blutuu(dato);
Serial.print("horas: "); 
Serial.println(hora2);

byte minuto2 = blutu(dato);
Serial.print("minutos: ");
Serial.println(minuto2);

byte foco = xd(dato);
byte B = bb(dato);

  //SE OBTENIE FECHA Y HORA ACTUAL Y SE ACTUALIZA
    RtcDateTime now = Rtc.GetDateTime();
    printDateTime(now,hora2, minuto2, foco, B,dato);

    Serial.println();
    if (!now.IsValid()){
        Serial.println("ERROR EN FECHA Y HORA");
    }
       delay(1000);
    //RETARDO DE 1 SEGUNDO
    
}

//////////////////////////////////////////////////////////////////////////////////////////////////

#define countof(a) (sizeof(a) / sizeof(a[0]))

//FUNCION PARA IMPRIMIR FECHA Y HORA CON FORMATO ADECUADO
void printDateTime(const RtcDateTime& dt,byte hora2,byte minuto2,byte foco,byte B,int dato){
  char datestring[20];
    snprintf_P(datestring, 
            countof(datestring),
            PSTR("%02u/%02u/%04u %02u:%02u:%02u"),//SE CONFURA FORMATO DE FECHA Y HORA
            dt.Day(),
            dt.Month(),
            dt.Year(),
            dt.Hour(),
            dt.Minute(),
            dt.Second() );
    
    //SE IMPRIME LA FECHA Y HORA EN LCD
    lcd.setCursor(0,0);
    lcd.print("DIA: ");
    lcd.print(dt.Day());
    lcd.print("/");
    lcd.print(dt.Month());
    lcd.print("/");
    lcd.print(dt.Year());
    lcd.print("     ");
    lcd.setCursor(0,1);
    lcd.print(" ");
    lcd.setCursor(0,1);
    lcd.print("HORA: ");
    lcd.print(dt.Hour());
    lcd.print(":");
    lcd.print(dt.Minute());
    lcd.print(":");
    lcd.print(dt.Second());
    lcd.print("     ");
    Serial.println(datestring);//SE IMPRIME EN MONITOR SERIE

    int hora = dt.Hour();
    int minuto = dt.Minute();
    int segundo = dt.Second();

Serial.print("dato: ");
Serial.println(dato);


Serial.print("foco: ");
Serial.println(foco);
if(dato == 70){
  lcd.clear();
   lcd.setCursor(0,0);
    lcd.print("Hora:");
    lcd.print(hora2);
    lcd.print(" / ");
    lcd.print("Min:");
    lcd.print(minuto2);
    lcd.setCursor(0,1);
    lcd.print("Buzzer:");
    lcd.print(B);
    delay(5000);
    dato =71;
        
}
else{
   Serial.print("Buzzer: ");
Serial.println(B);
if (B == 1){
   if (hora2 == hora && minuto2 == minuto){
      digitalWrite(rele, LOW);    // El rele trabaja al revez
      digitalWrite(rele2, LOW);    // El rele trabaja al revez
      tone(buzzer, 100);
        
      Serial.println("JEFEEEEEE"); 
      motor1();   
    }
    else{
      digitalWrite(rele,HIGH);  // EL rele trabaja al revez
      digitalWrite(rele2, HIGH);    // El rele trabaja al revez
      noTone (buzzer);
    }
}
else{
  if (hora2 == hora && minuto2 == minuto){
      digitalWrite(rele, LOW);    // El rele trabaja al revez
      digitalWrite(rele2, LOW);    // El rele trabaja al revez
      
              noTone (buzzer);
      Serial.println("JEFEEEEEE"); 
      motor1();   
    }
    else{
      digitalWrite(rele,HIGH);  // EL rele trabaja al revez
      digitalWrite(rele2, HIGH);    // El rele trabaja al revez
      noTone (buzzer);
    }
}

    if(foco == 60){
digitalWrite(rele, LOW);}
else{ digitalWrite(rele,HIGH);};

}
leeCadena = " ";
}

/////////////////////////////////////////////////////////////////////////////////////////////////
 
int blutuu(int dato){ 
   if(leeCadena.length()){
        dato = leeCadena.toInt();
  if( dato >= 1 && dato <= 23 ) { 
    int hora = dato;            
    return hora;}
   }
  
}

int bb(int dato){
  if (dato == 80){
  int buzzer = 1;
  return buzzer;
  }
  if (dato == 81){
  int buzzer = 0;
  return buzzer;
  }
}

  int xd(int dato){ 
  if(dato == 60) {            
  int foco1 = dato;
  return foco1;
  }
  
  if (dato == 61){
    int foco1 = 0;
    return foco1;
  }
}



int blutu(int dato){      
 
        
  if( dato >= 100 && dato <= 159 ) {             
  int minuto = dato;
  int minutoo = minuto -100;
  return minutoo;}

}
 

void motor1(){
  digitalWrite(in1, 1);
  digitalWrite(in2, 0);
  digitalWrite(in3, 1);
  digitalWrite(in4, 0);
  delay(5000);
  digitalWrite(in1, 0);
  digitalWrite(in2, 0);
  digitalWrite(in3, 0);
  digitalWrite(in4, 0);
  delay(55000);
}
